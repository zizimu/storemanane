<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.rainbow.mapper.TbBrandMapper" >

    <resultMap id="BaseResultMap" type="org.rainbow.pojo.TbBrand" >
        <id column="brand_id" property="brandId" jdbcType="BIGINT" />
        <result column="brand_name" property="brandName" jdbcType="VARCHAR" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="status" property="status" jdbcType="INTEGER" />
        <result column="mark" property="mark" jdbcType="VARCHAR" />
    </resultMap>

    <sql id="Base_Column_List" >
        brand_id, brand_name, create_time, status, mark
    </sql>

    <select id="selectAll" resultMap="BaseResultMap">
	    select
	    <include refid="Base_Column_List"/>
	    from tb_brand
	    where status = 1
	    ORDER BY create_time DESC
    </select>

	<select id="searchBrand" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List"/>
		from tb_brand
		where brand_id like '%' #{key,jdbcType=VARCHAR} '%'
		or brand_name like '%' #{key} '%'
		ORDER BY create_time DESC
	</select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
        select 
        <include refid="Base_Column_List" />
        from tb_brand
        where brand_id = #{brandId,jdbcType=BIGINT}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
        delete from tb_brand
        where brand_id = #{brandId,jdbcType=BIGINT}
    </delete>

    <insert id="insert" parameterType="org.rainbow.pojo.TbBrand" >
        insert into tb_brand (brand_id, brand_name, create_time, 
            status, mark)
        values (#{brandId,jdbcType=BIGINT}, #{brandName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
            #{status,jdbcType=INTEGER}, #{mark,jdbcType=VARCHAR})
    </insert>

    <insert id="insertSelective" parameterType="org.rainbow.pojo.TbBrand" >
        insert into tb_brand
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="brandId != null" >
                brand_id,
            </if>
            <if test="brandName != null" >
                brand_name,
            </if>
            <if test="status != null" >
                status,
            </if>
            <if test="mark != null" >
                mark,
            </if>
		        create_time
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="brandId != null" >
                #{brandId,jdbcType=BIGINT},
            </if>
            <if test="brandName != null" >
                #{brandName,jdbcType=VARCHAR},
            </if>
            <if test="status != null" >
                #{status,jdbcType=INTEGER},
            </if>
            <if test="mark != null" >
                #{mark,jdbcType=VARCHAR},
            </if>
	        	now()
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="org.rainbow.pojo.TbBrand" >
        update tb_brand
        <set >
            <if test="brandName != null" >
                brand_name = #{brandName,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null" >
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null" >
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="mark != null" >
                mark = #{mark,jdbcType=VARCHAR},
            </if>
        </set>
        where brand_id = #{brandId,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKey" parameterType="org.rainbow.pojo.TbBrand" >
        update tb_brand
        set brand_name = #{brandName,jdbcType=VARCHAR},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            status = #{status,jdbcType=INTEGER},
            mark = #{mark,jdbcType=VARCHAR}
        where brand_id = #{brandId,jdbcType=BIGINT}
    </update>
</mapper>